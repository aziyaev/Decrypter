<Window x:Class="DecrypterWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DecrypterWPF"
        mc:Ignorable="d"
        Title="Шифр Виженера" Height="850" Width="1300" ResizeMode="NoResize">
    <Window.Resources>
        <!--Control colors.-->
        <Color x:Key="WindowColor">red</Color>
        <Color x:Key="ContentAreaColorLight">red</Color>
        <Color x:Key="ContentAreaColorDark">red</Color>

        <Color x:Key="DisabledControlLightColor">red</Color>
        <Color x:Key="DisabledControlDarkColor">red</Color>
        <Color x:Key="DisabledForegroundColor">red</Color>

        <Color x:Key="SelectedBackgroundColor">red</Color>
        <Color x:Key="SelectedUnfocusedColor">red</Color>

        <Color x:Key="ControlLightColor">Transparent</Color>
        <Color x:Key="ControlMediumColor">Transparent</Color>
        <Color x:Key="ControlDarkColor">Transparent</Color>


        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">black</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">Black</Color>
        <Color x:Key="BorderMediumColor">White</Color>
        <Color x:Key="BorderDarkColor">red</Color>

        <Color x:Key="PressedBorderLightColor">red</Color>
        <Color x:Key="PressedBorderDarkColor">red</Color>

        <Color x:Key="DisabledBorderLightColor">red</Color>
        <Color x:Key="DisabledBorderDarkColor">red</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">red</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">red</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">red</Color>
        <Color x:Key="SliderTrackDarkColor">red</Color>

        <Color x:Key="NavButtonFrameColor">red</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="red"
                    Offset="0" />
                    <GradientStop Color="red"
                    Offset="0.4" />
                    <GradientStop Color="red"
                    Offset="0.6" />
                    <GradientStop Color="red"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>


        <Style x:Key="{x:Type RadioButton}"
       TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{DynamicResource RadioButtonFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="20"
                  Height="20">
                                    <Ellipse x:Name="Border"
                       StrokeThickness="1">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                       StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0" />
                                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                                  Offset="1" />
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <LinearGradientBrush StartPoint="0,0"
                                       EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                                      Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                    <Ellipse x:Name="CheckMark"
                       Margin="4"
                       Visibility="Collapsed">
                                        <Ellipse.Fill>
                                            <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Stroke).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#40000000" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Shape.Stroke).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="#40000000" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="6,0,0,0"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type CheckBox}"
       TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                    Width="20"
                    Height="20"
                    CornerRadius="3"
                    BorderThickness="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Border.Background>
                                    <Grid Margin="5">
                                        <Path Visibility="Collapsed"
                      Width="10"
                      Height="10"
                      x:Name="CheckMark"
                      SnapsToDevicePixels="False"
                      StrokeThickness="3"
                      Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Visibility="Collapsed"
                      Width="10"
                      Height="10"
                      x:Name="InderminateMark"
                      SnapsToDevicePixels="False"
                      StrokeThickness="13"
                      Data="M 0 7 L 7 0">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                            </Path.Stroke>
                                        </Path>
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="InderminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#d2c3d4">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="9*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="20,10,0,0">
            <Label FontSize="30" FontFamily="Lucida Bright" VerticalContentAlignment="Center" Margin="-5">Шифр Виженера</Label>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button x:Name="UploadButton" Click="UploadButton_Click" BorderThickness="0" Height="40" Width="150" FontFamily="Lucida Bright" FontSize="20" Margin="0,0,20,0" VerticalContentAlignment="Center">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#19000000"/>
                            <GradientStop Color="#19FF0000" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background> Загрузить</Button>
                <Button x:Name="SaveButton" Click="SaveButton_Click" BorderThickness="0" Height="40" Width="150" FontFamily="Lucida Bright" FontSize="20" Margin="0,0,20,0" VerticalContentAlignment="Center">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#19000000"/>
                            <GradientStop Color="#19FF0000" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>Сохранить</Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="3*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="20,0,20,0">
                <TextBlock TextWrapping="Wrap" FontFamily="Lucida Bright" FontSize="20">
                    Калькулятор шифрует входной текст на русском языке шифром Виженера. Неалфавитные символы (пробелы, знаки препинания, цифры) — не преобразуются.
                    Как повествует <Hyperlink NavigateUri="https://ru.wikipedia.org/wiki/%D0%A8%D0%B8%D1%84%D1%80_%D0%92%D0%B8%D0%B6%D0%B5%D0%BD%D0%B5%D1%80%D0%B0" RequestNavigate="Hyperlink_RequestNavigate">Википедия</Hyperlink>, шифр Виженера является шифром подстановки, то есть шифром, в котором каждая буква исходного текста заменяется буквой шифр-текста. 
                    Для вскрытия подобных шифров используется частотный криптоанализ.
                </TextBlock>
            </Grid>
            <Grid Grid.Row="1" Margin="20,0,20,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="8*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0">
                    <RadioButton x:Name="ROT0" IsChecked="True" Click="ROT0_Click" FontSize="17" FontFamily="Arial">ROT0 ("a" преобразуется в "а")</RadioButton>
                    <RadioButton x:Name="ROT1" IsChecked="False" Click="ROT1_Click" Margin="10,0,0,0" FontSize="17" FontFamily="Arial">ROT1 ("а" преобразуется в "б")</RadioButton>
                    <CheckBox x:Name="CheckBoxRegister" IsChecked="False" Click="CheckBoxRegister_Click" FontSize="17" FontFamily="Lucida Bright" Margin="10,0,0,0" HorizontalAlignment="Center"></CheckBox>
                    <TextBox Grid.Row="1" x:Name="StatusRegisterTextBox" FontSize="17" FontFamily="Lucida Bright" Background="Transparent" VerticalAlignment="Top" BorderThickness="0" IsReadOnly="True">Регистр учитывается</TextBox>
                </StackPanel>
                <TextBox Grid.Row="1" FontSize="17" FontWeight="Bold" FontFamily="Lucida Bright" Background="Transparent" VerticalAlignment="Center" BorderThickness="0" IsReadOnly="True">Текст</TextBox>
                <TextBox x:Name="InputTextBox" Grid.Row="2" Background="#ece6ed" BorderThickness="0" FontSize="20" TextWrapping="Wrap" ScrollBar.Scroll="TextBox_Scroll" FontFamily="Lucida Bright">
                    Wer schön sein will, der muss auch leiden
                    Aus- und weg- und abschneiden
                    Nadel, Faden, Schere, Licht
                    Doch ohne Schmerzen geht es nicht
                </TextBox>
            </Grid>
            <Grid Grid.Row="2" Margin="20,5,20,20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="1.2*"/>
                    <RowDefinition Height="6*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <StackPanel Orientation="Horizontal">
                        <TextBox FontSize="17" FontFamily="Lucida Bright" Background="Transparent" VerticalAlignment="Center" BorderThickness="0" IsReadOnly="True">Ключ:</TextBox>
                        <StackPanel Orientation="Horizontal" Margin="15,0,0,0" Background="#ededed" Width="300" HorizontalAlignment="Left" Height="35">
                            <TextBox x:Name="KeywordTextBox" Margin="5,0,0,0" Width="290" FontSize="17" FontFamily="Lucida Bright" Background="Transparent" VerticalAlignment="Center" BorderThickness="0">скорпион</TextBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="45,0,0,0">
                            <RadioButton x:Name="Encode" IsChecked="True" Click="Encode_Click"  FontSize="17" FontFamily="Lucida Bright">Зашифровать</RadioButton>
                            <RadioButton x:Name="Decode" IsChecked="False" Click="Decode_Click"  Margin="20,0,0,0" FontSize="17" FontFamily="Lucida Bright">Расшифровать</RadioButton>
                        </StackPanel>

                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBox FontSize="17" FontFamily="Lucida Bright" Background="Transparent" VerticalAlignment="Center" BorderThickness="0" IsReadOnly="True">Алфавит</TextBox>
                        <ComboBox HorizontalAlignment="Right" Width="120" Margin="15,0,0,0" SelectedValue="0" Height="35" VerticalContentAlignment="Center" FontSize="17" FontFamily="Lucida Bright" SelectionChanged="ComboBox_SelectionChanged">
                            <ComboBoxItem IsSelected="True">
                                <TextBlock>Русский</TextBlock>
                            </ComboBoxItem>
                            <ComboBoxItem>
                                <TextBlock>Английский</TextBlock>
                            </ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                </Grid>
                <Grid Grid.Row="1">
                    <TextBox Grid.Row="1" FontSize="17" FontFamily="Arial" FontWeight="Bold" Background="Transparent" VerticalAlignment="Center" BorderThickness="0" IsReadOnly="True">Преобразованный текст</TextBox>
                    <Button x:Name="ConvertButton" HorizontalAlignment="Right" Width="200" Height="27" BorderThickness="0" FontSize="17" FontFamily="Lucida Bright" Click="ConvertButton_Click">
                        <Button.Background>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#19000000"/>
                                <GradientStop Color="#19FF0000" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background> Рассчитать
                    </Button>
                </Grid>
                <Grid Grid.Row="2">
                    <TextBox x:Name="OutputTextBox" Grid.Row="2" Background="#ece6ed" IsReadOnly="True" BorderThickness="0" FontSize="20" FontFamily="Lucida Bright" TextWrapping="Wrap" ScrollBar.Scroll="TextBox_Scroll">

                    </TextBox>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>
